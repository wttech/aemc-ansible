---
name: Release Perform

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build and Deploy Collection
        uses: artis3n/ansible_galaxy_collection@v2
        with:
          api_key: ${{ secrets.GALAXY_API_KEY }}

      - name: Create Release
        uses: "actions/github-script@v6"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const response = await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: ${{ github.ref_name }},
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: ${{ github.ref_name }},
              });
    
              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }
